react confution clearing qustions


// notes about hooks

// useCallback (memoizing): Think of it as a tool for memoizing functions. When you have functions that you pass down to child components, 
// using useCallback ensures that the function reference stays the same unless its dependencies change. 
// This helps in preventing unnecessary re-renders, optimizing performance.

// useEffect (run): This is your go-to hook for running side effects like data fetching, updating the DOM, or setting up subscriptions. 
// It runs after the component renders and can re-run based on the dependencies you specify.

// So, while useCallback helps in keeping functions stable, 
// useEffect is used to handle side effects that need to be executed after render.

// jsx syntex

${}: Used within template literals in JavaScript to embed expressions.
{}: Used in JSX (React) to embed JavaScript expressions.

onChange={}: React event handler for changes in input fields.
onClick={}: React event handler for click events.
{label}: Accesses the label prop inside JSX.
value={}: Binds a form element's value to a state variable.

These attributes and the use of curly braces {} are specific to React and JSX syntax. They are not part of regular JavaScript or CSS.


